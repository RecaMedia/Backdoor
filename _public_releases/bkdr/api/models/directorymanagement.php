<?php
 class DirectoryManagement extends Controller{ function __construct($db,$domain,$config) { $this->db = $db; $this->domain = $domain; $this->config = $config; require_once('../dir-lister/DirectoryLister.php'); $this->lister = new DirectoryLister(); $this->extensions_dir = $this->config->backdoorDir . DIRECTORY_SEPARATOR . "extensions"; getcwd(); chdir(".." . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . $this->config->changeRoot); ini_set('open_basedir', getcwd()); } public function get() { if (isset($_GET['hash'])) { $hashes = $this->lister->getFileHash($_GET['hash']); $data = json_encode($hashes); die($data); } if (isset($_POST['dir'])) { $dir_array = $this->lister->listDirectory($_POST['dir']); } else { $dir_array = $this->lister->listDirectory('.'); } $breadcrumbs = $this->lister->listBreadcrumbs(); $sys_messages = $this->lister->getSystemMessages(); if (!$sys_messages) { $sys_messages = null; } $browser_data = array( 'breadcrumbs' => $breadcrumbs ); $files_array = array(); foreach ($dir_array as $name => $file_info) { if (is_file($file_info['file_path'])) { $is_folder = false; } else { $is_folder = true; } $files_array[$name] = array( 'filename' => $name, 'icon' => $file_info['icon_class'], 'url' => $file_info['url_path'], 'path' => $file_info['file_path'], 'size' => $file_info['file_size'], 'lastmodified' => $file_info['mod_time'], 'sort' => $file_info['sort'], 'handler' => $file_info['handler'], 'isfolder' => $is_folder, 'permission' => $file_info['permission'] ); } $browser_data['files'] = $files_array; $directory = json_decode(json_encode($browser_data)); return array( 'success' => true, 'statusMessage' => "Directory information found.", 'directory' => $directory ); } }